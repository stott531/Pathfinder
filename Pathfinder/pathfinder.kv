#:import alg pathfinder.Algorithms
#:import cm pathfinder.ClickMode

<RadioChckBx@CheckBox>:
    size_hint: 0.15, 1
    color: (0,0,0,1)

<RadioLabel@ButtonBehavior+Label>:
    text_size: self.size
    valign: 'center'
    font_size: '13sp'
    color: (0,0,0,1)

<ControlPanel>:
    spacing: 5
    Spinner:
        size_hint: 1, 0.08
        text: 'Select Algorithm'
        values: alg.get_algorithms()
        on_text: root.change_algorithm(self.text)
    Button:
        size_hint: 1, 0.08
        text: 'Run Search'
        on_press: root.run_search()

    Label:
        text: 'Drawing Mode'
        color: (0,0,0,1)
        size_hint: 1, 0.05

    BoxLayout:
        size_hint: 1, 0.04
        RadioChckBx:
            id: cb1
            group: 'mode'
            on_active: root.on_checkbox_active(self.active, cm.SOURCE)
        RadioLabel:
            on_press: cb1._do_press()
            text: 'Select Source'

    BoxLayout:
        size_hint: 1, 0.04
        RadioChckBx:
            id: cb2
            group: 'mode'
            on_active: root.on_checkbox_active(self.active, cm.DESTINATION)
        RadioLabel:
            on_press: cb2._do_press()
            text: 'Select Destination'

    BoxLayout:
        size_hint: 1, 0.04
        RadioChckBx:
            id: cb3
            group: 'mode'
            on_active: root.on_checkbox_active(self.active, cm.DRAW)
        RadioLabel:
            on_press: cb3._do_press()
            text: 'Draw Obstacles'

    BoxLayout:
        size_hint: 1, 0.04
        RadioChckBx:
            id: cb4
            group: 'mode'
            on_active: root.on_checkbox_active(self.active, cm.ERASE)
        RadioLabel:
            on_press: cb4._do_press()
            text: 'Erase Obstacles'

    Button:
        size_hint: 1, 0.08
        text: 'Randomize Maze'
        on_press: root.randomize_maze()
